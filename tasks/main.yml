---
# tasks/main.yml

- name: Oracle Client | Check if SQLplus is already present
  stat:
    path: "{{ oracle_home }}/bin/sqlplus"
  register: stat_sqlplus

- name: Oracle Client | Get Fact | Host Architecture
  set_fact:
    oracle_client_installer: "{{ oracle_client_installer_32 }}"
    oracle_client_installer_chksum: "{{ oracle_client_installer_32_chksum }}"
  when: ansible_userspace_bits == "32"

- name: Oracle Client | Get Fact | Host Architecture
  set_fact:
    oracle_client_installer: "{{ oracle_client_installer_64 }}"
    oracle_client_installer_chksum: "{{ oracle_client_installer_64_chksum }}"
  when: ansible_userspace_bits == "64"

# installation routine
- block:

  - name: Oracle Client | create group
    group:
      name: "{{ oracle_group }}"
      gid:  "{{ oracle_group_id }}"
      state: present

  - name: Oracle Client | create user
    user:
      name:      "{{ oracle_user }}"
      group:     "{{ oracle_group }}"
      comment:   "Oracle Client"
      createhome: no
      shell:      /bin/nologin
      state:      present

  - name: Oracle Client | set password for user
    user:
      name:            "{{ oracle_user }}"
      update_password: "{{ oracle_pass }}"
      shell:           /bin/bash
    when: oracle_pass is defined

  - name: Oracle Client | create installation path
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ oracle_user }}"
      group: "{{ oracle_group }}"
      mode:  "u=rwx,g=rwx,o="
    with_items:
      - "{{ oracle_installer }}"

  - name: Oracle Client | create directories
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ oracle_user }}"
      group: "{{ oracle_group }}"
      mode:  "u=rwx,g=rwx,o=rx"
    with_items:
      - "{{ oracle_home }}"
      - "{{ oracle_inventory }}"

  - name: Oracle Client | install the dependencies
    yum:
      name: "{{ item }}"
      state: installed
    with_items:
      - "libstdc++-devel"
      - "gcc"
      - "gcc-c++"
      - "ksh"
      - "glibc-devel"
      - "libaio-devel"

  - name: Oracle Client | Check if installer already present
    stat:
      path: "{{ oracle_installer }}/client/install/.oui"
    register: stat_installer
  
  - block:
  
    - name: Oracle Client | Transfer Package to Host
      copy:
        src: "{{ oracle_client_installer }}"
        dest: "{{ oracle_installer }}"
        mode: 0640
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        remote_src: no
  
    - name: Oracle Client | Unarchive
      unarchive:
        src: "{{ oracle_installer }}/{{ oracle_client_installer }}"
        dest: "{{ oracle_installer }}"
        remote_src: yes
      become: true
      become_user: "{{ oracle_user }}"
  
    when:
      - oracle_installer_uri is not defined
      - stat_installer.stat.exists == false
  
  - block:
  
    - name: Oracle Client | Download Installation Package to Host
      unarchive:
        src: "{{ oracle_installer_uri }}/{{ oracle_client_installer }}"
        dest: "{{ oracle_installer }}"
        remote_src: yes
      become: true
      become_user: "{{ oracle_user }}"
  
    when:
      - oracle_installer_uri is defined
      - stat_installer.stat.exists == false
  
  # https://docs.oracle.com/cd/E26854_01/em.121/e37799/toc.htm
  - name: Oracle Client | Install | Using Oracle Universal Installer
    command: "{{ oracle_installer }}/client/runInstaller -silent -responseFile {{ oracle_installer }}/client/response/client_install.rsp -ignoreSysPrereqs -ignorePrereq -waitforcompletion"
    become: true
    become_user: "{{ oracle_user }}"
    environment: "{{ oracle_installer_env }}"

  when: stat_sqlplus.stat.exists == false

- name: Oracle Client | Check if tnsnames.ora is already present
  stat:
    path: "{{ oracle_home }}/network/admin/tnsnames.ora"
  register: stat_tnsnames

- name: Oracle Client | Install | Create tnsnames.ora as template
  template:
    src:   tnsnames.j2
    dest:  "{{ oracle_home }}/network/admin/tnsnames.ora"
    owner:  "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode:  "u+rw,g+r,o+r"
  when: stat_tnsnames.stat.exists == false

- name: Oracle Client | Install | Create global environment file
  template:
    src:   environments.sh.j2
    dest:  "/etc/profile.d/env_ansible-oracle-client.sh"
    mode:  "u+rw,g+r,o+r"

- name: Oracle Client | Cleanup installation files
  file:
    path: "{{ oracle_installer }}/{{ oracle_client_installer }}"
    state: absent
